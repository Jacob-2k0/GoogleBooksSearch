{"version":3,"sources":["components/Navbar.js","components/Footer.js","components/Grid.js","components/Jumbotron.js","components/Card.js","components/SearchForm.js","components/BookList.js","components/BookInfo.js","utils/API.js","pages/Main.js","pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","state","open","width","window","innerWidth","updateWidth","newState","_this","setState","toggleNav","addEventListener","this","removeEventListener","react_default","a","createElement","className","Link","to","onClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","concat","id","location","pathname","Component","Footer","Container","_ref","fluid","children","Row","_ref2","Col","_ref3","size","split","map","join","Jumbotron","Card","icon","title","aria-hidden","Form","q","handleInputChange","handleFormSubmit","type","value","placeholder","name","onChange","required","List","ListBook","Book","subtitle","authors","link","description","image","Button","target","rel","href","src","alt","API","getBooks","axios","get","params","saveBook","bookData","post","getSavedBooks","deleteBook","delete","Main","books","message","event","_event$target","Object","defineProperty","then","res","data","catch","preventDefault","handleBookSave","book","find","googleId","volumeInfo","infoLink","imageLinks","thumbnail","_this2","components_Jumbotron","components_Card","SearchForm","length","BookList_List","BookInfo","key","Saved","err","console","log","handleBookDelete","_id","react","App","BrowserRouter","Navbar","Switch","Route","exact","path","component","components_Footer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e32cf20f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n    state = {\r\n        open: false,\r\n        width: window.innerWidth\r\n    };\r\n\r\n    updateWidth = () => {\r\n        const newState = { width: window.innerWidth };\r\n\r\n        if (this.state.open && newState.width > 991) {\r\n            newState.open = false;\r\n        }\r\n\r\n        this.setState(newState);\r\n    };\r\n\r\n    toggleNav = () => {\r\n        this.setState({ open: !this.state.open });\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.updateWidth);\r\n    }\r\n\r\n    componentWillUnMount() {\r\n        window.removeEventListener(\"resize\", this.updateWidth);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light mb-2\">\r\n                <Link className=\"navbar-brand \" to=\"/\">\r\n                    Google Books Search\r\n                </Link>\r\n                <button\r\n                    onClick={this.toggleNav}\r\n                    className=\"navbar-toggler\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarNav\"\r\n                    aria-controls=\"navbarNav\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse justify-content-end`} id=\"navbarNav\">\r\n                    <ul className=\"nav nav-pills \">\r\n                        <li className=\"nav-item \">\r\n                            <Link\r\n                                onClick={this.toggleNav}\r\n                                className={window.location.pathname === \"/\" ? \"nav-link active btn-outline-secondary\" : \"nav-link btn-outline-secondary\"}\r\n                                to=\"/\"\r\n                            >\r\n                                Search\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                onClick={this.toggleNav}\r\n                                className={window.location.pathname === \"/saved\" ? \"nav-link active btn-outline-secondary\" : \"nav-link btn-outline-secondary\"}\r\n                                to=\"/saved\"\r\n                            >\r\n                                Saved Books\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p>\r\n                Powered by React.\r\n            </p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","import React from \"react\";\r\n\r\nexport function Container({ fluid, children }) {\r\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Row({ fluid, children }) {\r\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function Col({ size, children }) {\r\n    return (\r\n        <div\r\n            className={size\r\n                .split(\" \")\r\n                .map(size => \"col-\" + size)\r\n                .join(\" \")}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n    return <div className=\"jumbotron mt-2\">{children}</div>;\r\n}\r\n\r\nexport default Jumbotron;\r\n ","import React from \"react\";\r\n\r\nfunction Card({ icon, title, children }) {\r\n    return (\r\n        <div className=\"card mt-4\">\r\n            <div className=\"card-header\">\r\n                <h3>\r\n                    <strong>\r\n                        <i className={`fa fa-${icon}`} aria-hidden=\"true\" /> {title}\r\n                    </strong>\r\n                </h3>\r\n            </div>\r\n            <div className=\"card-body\">{children}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n ","import React from \"react\";\r\n\r\nfunction Form({ q, handleInputChange, handleFormSubmit }) {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    id=\"Title\"\r\n                    type=\"text\"\r\n                    value={q}\r\n                    placeholder=\"Supermarket\"\r\n                    name=\"q\"\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"pull-right\">\r\n                <button\r\n                    onClick={handleFormSubmit}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-lg btn-outline-success float-right\"\r\n                >\r\n                    Search\r\n        </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form; \r\n","import React from \"react\";\r\n\r\nexport const List = ({ children }) => (\r\n    <ul className=\"list-group\">\r\n        {children}\r\n    </ul>\r\n);\r\n\r\nexport function ListBook({ children }) {\r\n    return <li className=\"list-group-item\">{children}</li>;\r\n}; ","import React from \"react\";\r\nimport { ListBook } from \"./BookList\";\r\nimport { Row, Col } from \"./Grid\";\r\n\r\nfunction Book({ title, subtitle, authors, link, description, image, Button }) {\r\n    return (\r\n        <ListBook>\r\n            <Row className=\"flex-wrap-reverse\">\r\n                <Col size=\"md-10 sm-8\">\r\n                    <h3 className=\"font-italic\">{title}</h3>\r\n                    {subtitle && <h5 className=\"font-italic\">{subtitle}</h5>}\r\n                </Col>\r\n                <Col size=\"md-2 sm-4\">\r\n                    <div className=\"btn-container\">\r\n                        <a className=\"btn btn-outline-secondary\" target=\"_blank\" rel=\"noopener noreferrer\" href={link}>\r\n                            View\r\n            </a>\r\n                        <Button />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col size=\"md-6\">\r\n                    <p className=\"font-italic small\">Written by {authors}</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col size=\"12 sm-4 md-2\">\r\n                    <img className=\"img-thumbnail img-fluid w-100\" src={image} alt={title} />\r\n                </Col>\r\n                <Col size=\"12 sm-8 md-10\">\r\n                    <p>{description}</p>\r\n                </Col>\r\n            </Row>\r\n        </ListBook>\r\n    );\r\n} \r\n\r\nexport default Book;\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n    // Getting searched book title\r\n    getBooks : function (q) {\r\n        return axios.get(\"/api/google\", { params: { q : \"title:\" + q }});\r\n    },\r\n    // Saving Selected book to db\r\n    saveBook: function(bookData) {\r\n        return axios.post(\"/api/books\", bookData)\r\n    },\r\n    // Getting all saved books from \r\n    getSavedBooks: function (){\r\n        return axios.get(\"/api/books\");\r\n    },\r\n    // Deleting selected book from db\r\n    deleteBook: function(id) {\r\n        return axios.delete(\"/api/books/\" + id)\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from '../components/Grid';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport Card from \"../components/Card\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport Book from \"../components/BookInfo\";\r\nimport { List } from \"../components/BookList\";\r\nimport API from \"../utils/API\";\r\nimport \"../App.css\";\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        books: [],\r\n        q: \"\",\r\n        message: \"No results yet.\"\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    getBooks = () => {\r\n        API.getBooks(this.state.q)\r\n            .then(res =>\r\n                this.setState({\r\n                    books: res.data\r\n                })\r\n            )\r\n            .catch(() =>\r\n                this.setState({\r\n                    books: [],\r\n                    message: \"Looks like there are no new books with that title, Try again!\"\r\n                })\r\n            );\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.getBooks();\r\n    };\r\n\r\n    handleBookSave = id => {\r\n        const book = this.state.books.find(book => book.id === id);\r\n\r\n        API.saveBook({\r\n            googleId: book.id,\r\n            title: book.volumeInfo.title,\r\n            subtitle: book.volumeInfo.subtitle,\r\n            link: book.volumeInfo.infoLink,\r\n            authors: book.volumeInfo.authors,\r\n            description: book.volumeInfo.description,\r\n            image: book.volumeInfo.imageLinks.thumbnail\r\n        }).then(() => this.getBooks());\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container fluid=\"fluid\">\r\n                    <Row>\r\n                        <Col size=\"md-12\">\r\n                            <Jumbotron>\r\n                                <h1 className=\"text-center\">Lutique's Library</h1>\r\n                                <h4 className=\"text-center\">Find & Save All Of Your Favorite Books!</h4>\r\n                            </Jumbotron>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col size=\"md-12\">\r\n                            <Card title=\"Search:\">\r\n                                <SearchForm \r\n                                    handleInputChange={this.handleInputChange}\r\n                                    handleFormSubmit={this.handleFormSubmit}\r\n                                    q={this.state.q}\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col size=\"md-12\">\r\n                            <Card title=\"Results\">\r\n                                {this.state.books.length ? (\r\n                                    <List>\r\n                                        {this.state.books.map(book => (\r\n                                            <Book\r\n                                                key={book.id}\r\n                                                title={book.volumeInfo.title}\r\n                                                subtitle={book.volumeInfo.subtitle}\r\n                                                link={book.volumeInfo.infoLink}\r\n                                                authors={book.volumeInfo.authors.join(\", \")}\r\n                                                description={book.volumeInfo.description}\r\n                                                image={book.volumeInfo.imageLinks.thumbnail}\r\n                                                Button={() => (\r\n                                                    <button\r\n                                                        onClick={() => this.handleBookSave(book.id)}\r\n                                                        className=\"btn btn-outline-info ml-2\"\r\n                                                    >\r\n                                                        Save\r\n                                                    </button>\r\n                                                )}\r\n                                            />\r\n                                        ))}\r\n                                    </List>\r\n                                ) : (\r\n                                        <h3 className=\"text-center\">{this.state.message}</h3>\r\n                                    )}\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React, { Component, Fragment } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport Card from \"../components/Card\";\r\nimport Book from \"../components/BookInfo\";\r\nimport API from \"../utils/API\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport { List } from \"../components/BookList\";\r\n\r\nclass Saved extends Component {\r\n    state = {\r\n        books: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getSavedBooks();\r\n    }\r\n\r\n    getSavedBooks = () => {\r\n        API.getSavedBooks()\r\n        .then(res =>\r\n            this.setState({\r\n            books: res.data\r\n            })\r\n        )\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    handleBookDelete = id => {\r\n        API.deleteBook(id).then(res => this.getSavedBooks());\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <Container fluid=\"fluid\">\r\n            <Row>\r\n            <Col size=\"md-12\">\r\n                <Jumbotron>\r\n                <h1 className=\"text-center\">\r\n                    <strong>Lutique's Library</strong>\r\n                </h1>\r\n                <h2 className=\"text-center\">\r\n                    Saved Books.\r\n                </h2>\r\n                </Jumbotron>\r\n            </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col size=\"md-12\">\r\n                <Card title=\"Your Saves:\" icon=\"download\">\r\n                {this.state.books.length ? (\r\n                    <List>\r\n                    {this.state.books.map(book => (\r\n                        <Book\r\n                        key={book._id}\r\n                        title={book.title}\r\n                        subtitle={book.subtitle}\r\n                        link={book.link}\r\n                        authors={book.authors.join(\", \")}\r\n                        description={book.description}\r\n                        image={book.image}\r\n                        Button={() => (\r\n                            <button\r\n                            onClick={() => this.handleBookDelete(book._id)}\r\n                            className=\"btn btn-outline-danger ml-2\"\r\n                            >\r\n                            Delete\r\n                            </button>\r\n                        )}\r\n                        />\r\n                    ))}\r\n                    </List>\r\n                ) : (\r\n                    <h2 className=\"text-center\">No Saved Books</h2>\r\n                )}\r\n                </Card>\r\n            </Col>\r\n            </Row>\r\n            {this.state.books.length ? <br /> : <Fragment><br /><br /><br /><br /><br /><br /><br /></Fragment>}\r\n        </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Saved;\r\n","import React, { Component } from \"react\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\"\r\nimport Footer from \"./components/Footer\"\r\nimport Main from \"./pages/Main\";\r\nimport Saved from \"./pages/Saved\";\r\nimport \"./App.css\"\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Main} />\r\n            <Route exact path=\"/saved\" component={Saved} />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}